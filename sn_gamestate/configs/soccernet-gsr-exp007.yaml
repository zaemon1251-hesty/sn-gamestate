# TrackLab SoccerNet config

# The defaults list contains the files that will be used
# to create the final config file. This item *must* be
# the first element in the file.
# Detailed configs for each default component below are located in "sn-gamestate/sn-gamestate/configs" and "tracklab/tracklab/configs"
# Define here which implementation (yolov8, oc_sort, ..) to use for each generic (detection, tracking, ...) component.
defaults:
  - dataset: soccernet_gs
  - eval: trackeval
  - engine: offline
  - state: save  # Dump tracking results to a .pcklz file to save computation time on the next run. Have a look at TrackLab tutorials for more details.
  - visualization: gamestate  # Save tracking results as a .mp4 video in the run directory specified below (sn-gamestate/outputs/...)
  - modules/bbox_detector: yolov8
  - modules/reid: prtreid
  - modules/track: bpbreid_strong_sort
  - modules/jersey_number_detect: mmocr
  - modules/team: kmeans_embeddings
  - modules/team_side: mean_position
  - modules/tracklet_agg: voting_role_jn
  - modules/pitch : tvcalib
  - modules/calibration: tvcalib
  - _self_

pipeline: []

# Experiment name
experiment_name: "sn-gamestate-gsr"

# Path definitions
home_dir: "${oc.env:HOME}"
data_dir: "/local/moriy/SoccerNetGS"
model_dir: "/raid/moriy/model/soccernet/sn-gamestate"

# Machine configuration
num_cores: 4
use_wandb: True
use_rich: True

# wandb kwargs
wandb:
  name: exp007

modules: # Allows module-specific batch_size and other configuration
  bbox_detector: {batch_size: 64}
  pose_bottomup: {batch_size: 64}
  reid: {
    batch_size: 256,
    training_enabled: True,
    save_path: "${model_dir}/reid/${experiment_name}/${now:%Y-%m-%d-%H-%M-%S}",
    dataset: {
      train: {
        min_samples_per_id: 4,
        max_samples_per_id: 15,
        min_h: 10,
        min_w: 10
        },
      test: {
        set_name: "valid",
        min_samples_per_id: 4,
        max_samples_per_id: 10,
        ratio_query_per_id: 0.2
      }
    },
    cfg: {
      project: {
        logger: {use_wandb: True},
        experiment_name: "${wandb.name}",
      },
      train: {
        max_epoch: 120,
        # batch_size: 128,
        optim: adam,
        # lr: 0.00035,
        # weight_decay: 5e-4,
        eval_freq: 10,
      },
      test: {
        evaluate: False,
        start_eval: 3,
        batch_size: 4
      },
      model: {
        pretrained: True, # hrnet32 の学習済み重みは使用する
        load_weights: "",
      },
      sampler: {
        num_instances: 4
      },
      data: {
        save_dir: "${model_dir}/reid/${experiment_name}/",
        workers: 1
      },
      loss: {
        triplet: {margin: .0},
      }
      # rmsprop: {alpha: 0.99},
      # adam: {beta1: 0.9, beta2: 0.999},
    }
  }
  track: {batch_size: 256}
  pitch: {batch_size: 4}
  calibration: {batch_size: 256, optim_steps: 100}
  jersey_number_detect: {batch_size: 16}

# Flags
test_tracking: True # If True, pipeline  が実行される
eval_tracking: True #test_tracking と  eval_tracking がどちらもTrueの場合、評価が実行される
print_config: False

# Dataset
dataset:
  nvid: -1  #
  eval_set: "test"
  dataset_path: ${data_dir}/gamestate-2024
  vids_dict:
    valid: []

state:
  save_file: null #"states/${experiment_name}.pklz"  # 'null' to disable saving. This is the save path for the tracker_state object that contains all modules outputs (bboxes, reid embeddings, jersey numbers, roles, teams, etc)
  load_file: /home/lr/moriy/workspace/soccernet/tracklab/outputs/sn-gamestate-gsr/2024-11-20/18-25-22/states/sn-gamestate-gsr.pklz

# Visualization
visualization:
  cfg:
    save_videos: True


project_dir: "${hydra:runtime.cwd}"
hydra:
  output_subdir: "configs"
  job:
    chdir: True
  run:
    dir: "outputs/${experiment_name}/${now:%Y-%m-%d}/${now:%H-%M-%S}"
  sweep:
    dir: "multirun_outputs/${experiment_name}/${now:%Y-%m-%d}/${now:%H-%M-%S}"
